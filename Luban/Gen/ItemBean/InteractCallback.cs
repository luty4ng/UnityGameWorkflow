//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace LubanConfig.ItemBean
{

public sealed partial class InteractCallback :  Bright.Config.BeanBase, System.ICloneable 
{
    public InteractCallback(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["callbackType"].IsNumber) { throw new SerializationException(); }  CallbackType = (ItemEnum.InteractCallbackType)_json["callbackType"].AsInt; }
        { if(!_json["callbackArgs"].IsString) { throw new SerializationException(); }  CallbackArgs = _json["callbackArgs"]; }
        PostInit();
    }

    public InteractCallback(int id, ItemEnum.InteractCallbackType callbackType, string callbackArgs ) 
    {
        this.Id = id;
        this.CallbackType = callbackType;
        this.CallbackArgs = callbackArgs;
        PostInit();
    }

    public static InteractCallback DeserializeInteractCallback(JSONNode _json)
    {
        return new ItemBean.InteractCallback(_json);
    }

    /// <summary>
    /// 物品id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 回调类型
    /// </summary>
    public ItemEnum.InteractCallbackType CallbackType { get; private set; }
    /// <summary>
    /// 回调函数参数
    /// </summary>
    public string CallbackArgs { get; private set; }

    public const int __ID__ = -841130554;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "CallbackType:" + CallbackType + ","
        + "CallbackArgs:" + CallbackArgs + ","
        + "}";
    }

    public object Clone()
    {
        return new InteractCallback(this.Id, this.CallbackType, this.CallbackArgs);
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
