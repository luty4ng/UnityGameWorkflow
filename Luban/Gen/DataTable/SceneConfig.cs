//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace LubanConfig.DataTable
{

public sealed partial class SceneConfig :  Bright.Config.BeanBase, System.ICloneable 
{
    public SceneConfig(JSONNode _json) 
    {
        { if(!_json["scene_asset_name"].IsString) { throw new SerializationException(); }  SceneAssetName = _json["scene_asset_name"]; }
        { if(!_json["is_unlocked"].IsString) { throw new SerializationException(); }  IsUnlocked = _json["is_unlocked"]; }
        PostInit();
    }

    public SceneConfig(string scene_asset_name, string is_unlocked ) 
    {
        this.SceneAssetName = scene_asset_name;
        this.IsUnlocked = is_unlocked;
        PostInit();
    }

    public static SceneConfig DeserializeSceneConfig(JSONNode _json)
    {
        return new DataTable.SceneConfig(_json);
    }

    /// <summary>
    /// 场景资源名
    /// </summary>
    public string SceneAssetName { get; private set; }
    /// <summary>
    /// 是否解锁
    /// </summary>
    public string IsUnlocked { get; private set; }

    public const int __ID__ = 476376580;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "SceneAssetName:" + SceneAssetName + ","
        + "IsUnlocked:" + IsUnlocked + ","
        + "}";
    }

    public object Clone()
    {
        return new SceneConfig(this.SceneAssetName, this.IsUnlocked);
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
